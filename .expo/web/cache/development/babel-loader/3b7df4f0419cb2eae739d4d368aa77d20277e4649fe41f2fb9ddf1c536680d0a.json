{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useLayoutEffect } from \"react\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { useSelector } from \"react-redux\";\nimport LottieView from \"lottie-react-native\";\nimport AppLoading from \"expo-app-loading\";\nimport { useFonts } from \"expo-font\";\nimport { Container, AddButton, AddButtonImage, NotesList, NoNotes, NoNotesImage, NoNotesText } from \"./styles\";\nimport NoteItem from \"../../components/NoteItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default (function () {\n  var navigation = useNavigation();\n  var list = useSelector(function (state) {\n    return state.notes.list;\n  });\n  useEffect(function () {\n    BackHandler.addEventListener(\"hardwareBackPress\", function () {\n      return true;\n    });\n  }, []);\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: \"Your Notes\",\n      headerLeft: false,\n      headerRight: function headerRight() {\n        return _jsx(AddButton, {\n          underlayColor: \"transparent\",\n          onPress: function onPress() {\n            return navigation.navigate(\"EditNote\");\n          },\n          children: _jsx(AddButtonImage, {\n            source: require(\"../../assets/more.png\")\n          })\n        });\n      }\n    });\n  }, []);\n  var handleNotePress = function handleNotePress(index) {\n    navigation.navigate(\"EditNote\", {\n      key: index\n    });\n  };\n  var _useFonts = useFonts({\n      \"WorkSans-SemiBold\": require(\"../../../assets/fonts/WorkSans/WorkSans-SemiBold.ttf\"),\n      \"WorkSans-Regular\": require(\"../../../assets/fonts/WorkSans/WorkSans-Regular.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 2),\n    fontsLoaded = _useFonts2[0],\n    error = _useFonts2[1];\n  if (!fontsLoaded) {\n    return _jsx(AppLoading, {});\n  }\n  return _jsxs(Container, {\n    children: [list.length > 0 && _jsx(NotesList, {\n      data: list,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item,\n          index = _ref.index;\n        return _jsx(NoteItem, {\n          data: item,\n          index: index,\n          onPress: handleNotePress\n        });\n      },\n      keyExtractor: function keyExtractor(item, index) {\n        return index.toString();\n      }\n    }), list.length === 0 && _jsx(NoNotes, {\n      children: _jsx(NoNotesText, {\n        style: {\n          fontFamily: \"WorkSans-SemiBold\"\n        },\n        children: \"add new notes by clicking + button\"\n      })\n    })]\n  });\n});","map":{"version":3,"names":["React","useEffect","useLayoutEffect","BackHandler","useNavigation","useSelector","LottieView","AppLoading","useFonts","Container","AddButton","AddButtonImage","NotesList","NoNotes","NoNotesImage","NoNotesText","NoteItem","jsx","_jsx","jsxs","_jsxs","navigation","list","state","notes","addEventListener","setOptions","title","headerLeft","headerRight","underlayColor","onPress","navigate","children","source","require","handleNotePress","index","key","_useFonts","_useFonts2","_slicedToArray","fontsLoaded","error","length","data","renderItem","_ref","item","keyExtractor","toString","style","fontFamily"],"sources":["C:/Users/Tisha/Music/btp/voice-notes/src/pages/ListScreen/index.js"],"sourcesContent":["import React, { useEffect, useLayoutEffect } from \"react\";\r\nimport { BackHandler } from \"react-native\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { useSelector } from \"react-redux\";\r\nimport LottieView from \"lottie-react-native\";\r\nimport AppLoading from \"expo-app-loading\";\r\nimport { useFonts } from \"expo-font\";\r\n\r\nimport {\r\n  Container,\r\n  AddButton,\r\n  AddButtonImage,\r\n  NotesList,\r\n  NoNotes,\r\n  NoNotesImage,\r\n  NoNotesText,\r\n} from \"./styles\";\r\n\r\nimport NoteItem from \"../../components/NoteItem\";\r\n\r\nexport default () => {\r\n  const navigation = useNavigation();\r\n  const list = useSelector((state) => state.notes.list);\r\n\r\n  useEffect(() => {\r\n    BackHandler.addEventListener(\"hardwareBackPress\", () => true);\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      title: \"Your Notes\",\r\n      headerLeft: false,\r\n      headerRight: () => (\r\n        <AddButton\r\n          underlayColor=\"transparent\"\r\n          onPress={() => navigation.navigate(\"EditNote\")}\r\n        >\r\n          <AddButtonImage source={require(\"../../assets/more.png\")} />\r\n        </AddButton>\r\n      ),\r\n    });\r\n  }, []);\r\n\r\n  const handleNotePress = (index) => {\r\n    navigation.navigate(\"EditNote\", {\r\n      key: index,\r\n    });\r\n  };\r\n\r\n  let [fontsLoaded, error] = useFonts({\r\n    \"WorkSans-SemiBold\": require(\"../../../assets/fonts/WorkSans/WorkSans-SemiBold.ttf\"),\r\n    \"WorkSans-Regular\": require(\"../../../assets/fonts/WorkSans/WorkSans-Regular.ttf\"),\r\n  });\r\n\r\n  if (!fontsLoaded) {\r\n    return <AppLoading />;\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {list.length > 0 && (\r\n        <NotesList\r\n          data={list}\r\n          renderItem={({ item, index }) => (\r\n            <NoteItem data={item} index={index} onPress={handleNotePress} />\r\n          )}\r\n          keyExtractor={(item, index) => index.toString()}\r\n        />\r\n      )}\r\n      {list.length === 0 && (\r\n        <NoNotes>\r\n          <NoNotesText style={{ fontFamily: \"WorkSans-SemiBold\" }}>\r\n            add new notes by clicking + button \r\n          </NoNotesText>\r\n        </NoNotes>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}