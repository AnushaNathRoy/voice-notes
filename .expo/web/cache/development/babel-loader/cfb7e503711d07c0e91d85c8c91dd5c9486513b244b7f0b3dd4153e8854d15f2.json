{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useRoute, useNavigation } from \"@react-navigation/native\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Container, TitleInput, BodyInput, SaveButton, SaveButtonImage, CloseButton, CloseButtonImage, ButtonsContainer, DeleteButton, DeleteButtonText, SuccessButton, SuccessButtonText, NoSuccessButton, NoSuccessButtonText } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default (function () {\n  var navigation = useNavigation();\n  var route = useRoute();\n  var dispatch = useDispatch();\n  var list = useSelector(function (state) {\n    return state.notes.list;\n  });\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    title = _useState2[0],\n    setTitle = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    body = _useState4[0],\n    setBody = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    done = _useState6[0],\n    setDone = _useState6[1];\n  var _useState7 = useState(\"new\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    status = _useState8[0],\n    setStatus = _useState8[1];\n  useEffect(function () {\n    var _route$params;\n    if (((_route$params = route.params) == null ? void 0 : _route$params.key) !== undefined && list[route.params.key]) {\n      setStatus(\"edit\");\n      setTitle(list[route.params.key].title);\n      setBody(list[route.params.key].body);\n      setDone(list[route.params.key].done);\n    }\n  }, []);\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      title: status === \"new\" ? \"Add New\" : \"Edit Notes\",\n      headerLeft: function headerLeft() {\n        return _jsx(CloseButton, {\n          underlayColor: \"transparent\",\n          onPress: handleCloseButton,\n          children: _jsx(CloseButtonImage, {\n            source: require(\"../../assets/close.png\")\n          })\n        });\n      },\n      headerRight: function headerRight() {\n        return _jsxs(Container, {\n          children: [_jsx(SaveButton, {\n            underlayColor: \"transparent\",\n            onPress: handleSaveButton,\n            children: _jsx(SaveButtonImage, {\n              source: require(\"../../assets/save.png\")\n            })\n          }), _jsx(SaveButton, {\n            underlayColor: \"transparent\",\n            onPress: handleDeleteNote,\n            children: _jsx(SaveButtonImage, {\n              source: require(\"../../assets/del.png\")\n            })\n          })]\n        });\n      }\n    });\n  }, [status, title, body]);\n  var setBodyRichText = function setBodyRichText(text) {\n    var boldRegex = /\\*([^\\*]+)\\*/g;\n    var italicRegex = /_([^_]+)_/g;\n    var strikeRegex = /~([^~]+)~/g;\n    var codeRegex = /`([^`]+)`/g;\n    var formattedText = text.replace(boldRegex, \"<b>$1</b>\").replace(italicRegex, \"<i>$1</i>\").replace(strikeRegex, \"<s>$1</s>\").replace(codeRegex, \"<code>$1</code>\");\n    setBody(formattedText);\n  };\n  var handleSaveButton = function handleSaveButton() {\n    if (title !== \"\" && body !== \"\") {\n      if (status === \"edit\") {\n        dispatch({\n          type: \"EDIT_NOTE\",\n          payload: {\n            key: route.params.key,\n            title: title,\n            body: body,\n            done: done\n          }\n        });\n      } else {\n        dispatch({\n          type: \"ADD_NOTE\",\n          payload: {\n            title: title,\n            body: body\n          }\n        });\n      }\n      navigation.navigate(\"List\");\n    } else {\n      alert(\"Sorry :( \\n\\nTitle and body are required!\");\n    }\n  };\n  var handleCloseButton = function handleCloseButton() {\n    return navigation.navigate(\"List\");\n  };\n  var handleDeleteNote = function handleDeleteNote() {\n    Alert.alert(\"Confirmation\", \"Are you sure you want to delete?\", [{\n      text: \"Cancel\",\n      style: \"cancel\"\n    }, {\n      text: \"Delete\",\n      style: \"destructive\",\n      onPress: function onPress() {\n        dispatch({\n          type: \"DELETE_NOTE\",\n          payload: {\n            key: route.params.key\n          }\n        });\n        navigation.navigate(\"List\");\n      }\n    }], {\n      cancelable: false\n    });\n  };\n  return _jsxs(Container, {\n    children: [_jsx(TitleInput, {\n      value: title,\n      onChangeText: function onChangeText(t) {\n        return setTitle(t);\n      },\n      placeholder: \"Title | ex: Lecture Notes \\uD83D\\uDCDA\",\n      placeholderTextColor: \"#ccc\",\n      autoFocus: true,\n      style: {\n        fontFamily: \"WorkSans-SemiBold\"\n      }\n    }), _jsx(BodyInput, {\n      value: body,\n      onChangeText: function onChangeText(t) {\n        return setBodyRichText(t);\n      },\n      placeholder: \"Note | ex: Today I learned ....\",\n      placeholderTextColor: \"#ccc\",\n      multiline: true,\n      textAlignVertical: \"top\",\n      style: {\n        fontFamily: \"WorkSans-Regular\"\n      }\n    }), status === \"edit\" && _jsx(ButtonsContainer, {\n      children: _jsx(DeleteButton, {\n        underlayColor: \"#FF0000\",\n        children: _jsx(DeleteButtonText, {\n          style: {\n            fontFamily: \"WorkSans-Regular\"\n          },\n          children: \"Record Audio\"\n        })\n      })\n    })]\n  });\n});","map":{"version":3,"names":["React","useState","useEffect","useLayoutEffect","useSelector","useDispatch","useRoute","useNavigation","Alert","Container","TitleInput","BodyInput","SaveButton","SaveButtonImage","CloseButton","CloseButtonImage","ButtonsContainer","DeleteButton","DeleteButtonText","SuccessButton","SuccessButtonText","NoSuccessButton","NoSuccessButtonText","jsx","_jsx","jsxs","_jsxs","navigation","route","dispatch","list","state","notes","_useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","body","setBody","_useState5","_useState6","done","setDone","_useState7","_useState8","status","setStatus","_route$params","params","key","undefined","setOptions","headerLeft","underlayColor","onPress","handleCloseButton","children","source","require","headerRight","handleSaveButton","handleDeleteNote","setBodyRichText","text","boldRegex","italicRegex","strikeRegex","codeRegex","formattedText","replace","type","payload","navigate","alert","style","cancelable","value","onChangeText","t","placeholder","placeholderTextColor","autoFocus","fontFamily","multiline","textAlignVertical"],"sources":["C:/Users/Tisha/Music/btp/voice-notes/src/pages/EditNoteScreen/index.js"],"sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useRoute, useNavigation } from \"@react-navigation/native\";\r\nimport { Alert } from \"react-native\";\r\nimport {\r\n  Container,\r\n  TitleInput,\r\n  BodyInput,\r\n  SaveButton,\r\n  SaveButtonImage,\r\n  CloseButton,\r\n  CloseButtonImage,\r\n  ButtonsContainer,\r\n  DeleteButton,\r\n  DeleteButtonText,\r\n  SuccessButton,\r\n  SuccessButtonText,\r\n  NoSuccessButton,\r\n  NoSuccessButtonText,\r\n} from \"./styles\";\r\n\r\nexport default () => {\r\n  const navigation = useNavigation();\r\n  const route = useRoute();\r\n  const dispatch = useDispatch();\r\n  const list = useSelector((state) => state.notes.list);\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [done, setDone] = useState(false);\r\n  const [status, setStatus] = useState(\"new\");\r\n\r\n  useEffect(() => {\r\n    if (route.params?.key !== undefined && list[route.params.key]) {\r\n      setStatus(\"edit\");\r\n      setTitle(list[route.params.key].title);\r\n      setBody(list[route.params.key].body);\r\n      setDone(list[route.params.key].done);\r\n    }\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      title: status === \"new\" ? \"Add New\" : \"Edit Notes\",\r\n      headerLeft: () => (\r\n        <CloseButton underlayColor=\"transparent\" onPress={handleCloseButton}>\r\n          <CloseButtonImage source={require(\"../../assets/close.png\")} />\r\n        </CloseButton>\r\n      ),\r\n      headerRight: () => (\r\n        <Container>\r\n          <SaveButton underlayColor=\"transparent\" onPress={handleSaveButton}>\r\n            <SaveButtonImage source={require(\"../../assets/save.png\")} />\r\n          </SaveButton>\r\n\r\n          <SaveButton underlayColor=\"transparent\" onPress={handleDeleteNote}>\r\n            <SaveButtonImage source={require(\"../../assets/del.png\")} />\r\n          </SaveButton>\r\n        </Container>\r\n      ),\r\n    });\r\n  }, [status, title, body]);\r\n\r\n  const setBodyRichText = (text) => {\r\n    // Check for formatting patterns like notion /h1 /b /i /s /c /quote /code /link /divider /numbered list /bulleted list /toggle list\r\n    const boldRegex = /\\*([^\\*]+)\\*/g;\r\n    const italicRegex = /_([^_]+)_/g;\r\n    const strikeRegex = /~([^~]+)~/g;\r\n    const codeRegex = /`([^`]+)`/g;\r\n\r\n    // Replace with formatting components\r\n    const formattedText = text\r\n      .replace(boldRegex, \"<b>$1</b>\")\r\n      .replace(italicRegex, \"<i>$1</i>\")\r\n      .replace(strikeRegex, \"<s>$1</s>\")\r\n      .replace(codeRegex, \"<code>$1</code>\");\r\n\r\n    setBody(formattedText);\r\n  };\r\n\r\n  const handleSaveButton = () => {\r\n    if (title !== \"\" && body !== \"\") {\r\n      if (status === \"edit\") {\r\n        dispatch({\r\n          type: \"EDIT_NOTE\",\r\n          payload: {\r\n            key: route.params.key,\r\n            title,\r\n            body,\r\n            done,\r\n          },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: \"ADD_NOTE\",\r\n          payload: { title, body },\r\n        });\r\n      }\r\n\r\n      navigation.navigate(\"List\");\r\n    } else {\r\n      alert(\"Sorry :( \\n\\nTitle and body are required!\");\r\n    }\r\n  };\r\n\r\n  const handleCloseButton = () => navigation.navigate(\"List\");\r\n\r\n  const handleDeleteNote = () => {\r\n    Alert.alert(\r\n      \"Confirmation\",\r\n      \"Are you sure you want to delete?\",\r\n      [\r\n        {\r\n          text: \"Cancel\",\r\n          style: \"cancel\",\r\n        },\r\n        {\r\n          text: \"Delete\",\r\n          style: \"destructive\",\r\n          onPress: () => {\r\n            dispatch({\r\n              type: \"DELETE_NOTE\",\r\n              payload: {\r\n                key: route.params.key,\r\n              },\r\n            });\r\n            navigation.navigate(\"List\");\r\n          },\r\n        },\r\n      ],\r\n      { cancelable: false }\r\n    );\r\n  };\r\n  \r\n \r\n\r\n\r\n  return (\r\n    <Container>\r\n      <TitleInput\r\n        value={title}\r\n        onChangeText={(t) => setTitle(t)}\r\n        placeholder=\"Title | ex: Lecture Notes 📚\"\r\n        placeholderTextColor=\"#ccc\"\r\n        autoFocus={true}\r\n        style={{ fontFamily: \"WorkSans-SemiBold\" }}\r\n      />\r\n\r\n      <BodyInput\r\n        value={body}\r\n        onChangeText={(t) => setBodyRichText(t)}\r\n        placeholder=\"Note | ex: Today I learned ....\"\r\n        placeholderTextColor=\"#ccc\"\r\n        multiline={true}\r\n        textAlignVertical=\"top\"\r\n        style={{ fontFamily: \"WorkSans-Regular\" }}\r\n      />\r\n\r\n      {status === \"edit\" && (\r\n        <ButtonsContainer>\r\n          <DeleteButton underlayColor=\"#FF0000\">\r\n            <DeleteButtonText style={{ fontFamily: \"WorkSans-Regular\" }}>\r\n              Record Audio\r\n            </DeleteButtonText>\r\n          </DeleteButton>\r\n        </ButtonsContainer>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}